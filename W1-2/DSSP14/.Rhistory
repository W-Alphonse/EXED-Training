# calculer la moyenne par grouppe
# dfinir le jeu de données | group by | sumarise
#dataset::iris
df_mean  <- iris %>%
group_by(Species) %>%
summarise(mean = mean(Sepal.Length))
df_mean  <- iris %>%
group_by(Species)
library(tidyverse)
df_mean  <- iris %>%
group_by(Species) %>%
summarise(mean = mean(Sepal.Length))
ggplot(iris) +
aes(x = Species, y = Sepal.Length) +
geom_boxplot(fill = "lightblue") +
geom_point(data = df_mean,
mapping = aes(y=mean),
color = "red", size = 5, shape = "X") +
theme_minimal() +
theme(legend.position = "none")
ggplot(iris) +
aes(x = Species, y = Sepal.Length) +
geom_boxplot(fill = "lightblue") +
geom_point(data = df_mean,
mapping = aes(y=mean),
color = "red", size = 5, shape = "X") +
scale_y_continuous(limits = c(0,NA)) +
labs(caption = "Means are in red") +
theme_minimal() +
theme(legend.position = "none")
# jeud de données diamonds
diamons
# jeud de données diamonds
diamonds
?diamons
?diamonds
ggplot(diamonds) +
aes(x = diamonds.carat, y = diamonds.price)
geom_point()
# jeud de données diamonds
diamonds
ggplot(diamonds) +
aes(x = carat, y = price, color = cut) +
geom_point()
diamonds.$cut
ggplot(diamonds) +
aes(x = carat, y = price, color = cut) +
geom_point() +
geom_smooth()
geom_point(aes(color = cut) +
geom_point(aes(color = cut) +
ggplot(diamonds) +
aes(x = carat, y = price) +
geom_point(aes(color = cut) +
geom_smooth()
# NB: tout les parametres ci dessous (...) descendent au niveau "suivant" ds les layers
ggplot(diamonds) +
# NB: tout les parametres ci dessous (...) descendent au niveau "suivant" ds les layers
ggplot(diamonds) +
ggplot(diamonds) +
ggplot(diamonds) +
aes(x = carat, y = price) +
geom_point(aes(color = cut)) +
geom_smooth()
ggplot(diamonds) +
aes(x = carat, y = price) +
geom_point(aes(color = cut)) +
geom_smooth()
ggplot(diamonds) +
aes(x = carat, y = price) +
geom_point(aes(color = cut)) +
sclae_y_sqrt()
ggplot(diamonds) +
aes(x = carat, y = price) +
geom_point(aes(color = cut)) +
scale_y_sqrt()
ggplot(diamonds) +
aes(x=cut) +
geom_bar()
diamonds %>%
count(cut)
diamonds %>%
count(cut) %>%
ggplot() +
axes(x=cut, y = n) +
geom_col()
diamonds %>%
count(cut) %>%
ggplot() +
axes(x = cut, y = n) +
geom_col()
diamonds %>%
count(cut) %>%
ggplot() +
axes(x = cut, y = n) +
geom_col()
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = cut, y = n) +
geom_col()
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = cut, y = n) +
geom_col() +
# n correspond à la fonction "count" par defaut
geom_text(aes(label=n, y = n /2), color = "white")
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = cut, y = n) +
geom_col() +
# n correspond à la fonction "count" par defaut
geom_text(aes(label=n, y = n /2, color = "white"))
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = cut, y = n) +
geom_col() +
# n correspond à la fonction "count" par defaut
geom_text(aes(label=n, y = n /2, color = "white"))
ggplot(diamonds) +
aes(x=cut, y =cut, fill=clarity) +
geom_bar()
ggplot(diamonds) +
aes(x=cut, y =cut, fill=clarity) +
geom_bar()
ggplot(diamonds) +
aes(x=cut,  fill=clarity) +
geom_bar()
diamonds %>%
count(cut) %>%
ggplot() +
aes(x=cut, y= n,   fill=color) +
geom_col()
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=color) +
geom_col()
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=clarity) +
geom_col()
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=clarity) +
geom_col()
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=color) +
geom_col(position = "dodge")
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=color) +
geom_col(position = "fill")
theme_set(minimal)
theme_set(theme_minimal())
diamonds %>%
count(cut, color) %>%
ggplot() +
aes(x=cut, y= n,   fill=color) +
geom_col(position = "fill")
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = 0, y =n, fill = cut) +
geom_col() +
theme_void()
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = 0, y =n, fill = cut) +
geom_col() +
coord_polar(theta="y")
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = 0, y =n, fill = cut) +
geom_col() +
coord_polar(theta="y")
diamonds %>%
count(cut) %>%
ggplot() +
aes(x = 0, y =n, fill = cut) +
geom_col() +
coord_polar(theta="x")
ggplot(iris) +
aes(x = Petal.Length, y = Petal.Width, color=Species)
